version: "3"
networks:
  app-tier:
    driver: bridge
services:
  redis:
    container_name: newsdict-redis
    image: 'redis'
    networks:
      - app-tier
  mongo:
    container_name: newsdict-mongodb
    image: mongo
    restart: always
    networks:
      - app-tier
    volumes:
      - ./tmp/data:/data
  web:
    tty: true
    stdin_open: true
    container_name: newsdict-web
    build:
      context: .
      dockerfile: Dockerfile
    image: newsdictio
    volumes:
      - ./:/var/www/docker
    working_dir: /var/www/docker
    command: "bash src/provisioning/startup/web/startup.sh development"
    ports:
      - 3100:80
      - 3036:3036
    networks:
      - app-tier
  worker:
    tty: true
    stdin_open: true
    container_name: newsdict-worker
    image: newsdictio
    working_dir: /var/www/docker
    command: "bash src/provisioning/startup/worker/startup.sh development"
    volumes:
      - ./:/var/www/docker
    networks:
      - app-tier
    depends_on:
      - web
      - redis
  asciidoctor:
    tty: true
    stdin_open: true
    container_name: newsdict-asciidoctor
    image: newsdict/asciidoctor.live:v0.1.12
    command: "bash src/provisioning/startup/asciidoctor/startup.sh development"
    volumes:
      - ./:/var/www/docker
    networks:
      - app-tier
  guard:
    tty: true
    stdin_open: true
    container_name: newsdict-guard
    image: newsdict/asciidoctor.live:v0.1.12
    command: "bash src/provisioning/startup/guard/startup.sh development"
    volumes:
      - ./:/var/www/docker
    networks:
      - app-tier
  browser-sync:
    tty: true
    stdin_open: true
    container_name: newsdict-browser-sync
    image: newsdict/asciidoctor.live:v0.1.12
    command: "bash src/provisioning/startup/browser-sync/startup.sh development"
    volumes:
      - ./:/var/www/docker
    ports:
      - 3000:3000
      - 3001:3001
    networks:
      - app-tier
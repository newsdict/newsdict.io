name: MiniTest

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: set environment variables
      run: |
        echo "SLACK_WEBHOOK=${{ secrets.SLACK_WEBHOOK }}" >> $GITHUB_ENV
        echo "SLACK_ICON=https://github.com/rtCamp.png?size=48" >> $GITHUB_ENV
        echo "SLACK_CHANNEL=actions" >> $GITHUB_ENV
        echo "SLACK_USERNAME=Github Actions" >> $GITHUB_ENV
    - name: Install Docker Compose
      run: |
        set -xe
        curl -L https://github.com/docker/compose/releases/download/1.27.4/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
        chmod +x ~/docker-compose
        sudo mv ~/docker-compose /usr/local/bin/docker-compose
    - name: Set up .env
      run: |
        cp .env-test .env
    - name: build
      run: |
        set -xe
        docker-compose build --no-cache
    - name: rails test -v
      run: |
        set -xe
        docker/start -d mongodb redis
        docker-compose up --abort-on-container-exit web &
        export ABORT_IF_EXIT_PID=$!
        docker/rails test -v
    - name: Coveralls GitHub Action
      uses: coverallsapp/github-action@v1.1.2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: "./coverage/lcov/docker.lcov"
    - name: Passed Slack Nortification
      uses: rtCamp/action-slack-notify@v2.0.0
      if: ${{ env.SLACK_WEBHOOK != null && success() }}
      env:
        SLACK_COLOR: '#0000f2'
        SLACK_MESSAGE: 'Passed unittest :100:'
    - name: NG Slack Nortification
      uses: rtCamp/action-slack-notify@v2.0.0
      if: ${{ env.SLACK_WEBHOOK != null && failure() }}
      env:
        SLACK_COLOR: '#ed0707'
        SLACK_MESSAGE: 'NG unittest :ng:'